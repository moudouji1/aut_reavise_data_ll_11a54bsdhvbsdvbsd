{
  "title": "üü§ Autres",
  "questions": [
    {
      "question": "En programmation orient√©e objet (POO) en PHP, quel est le r√¥le principal de la m√©thode `__construct()` ?",
      "options": [
        "D√©truire un objet et lib√©rer la m√©moire.",
        "√ätre appel√©e automatiquement lors de la cr√©ation d'un objet pour initialiser ses propri√©t√©s.",
        "Cloner un objet existant.",
        "Renvoyer une repr√©sentation de l'objet sous forme de cha√Æne de caract√®res."
      ],
      "answer": "√ätre appel√©e automatiquement lors de la cr√©ation d'un objet pour initialiser ses propri√©t√©s.",
      "explanation": "Le constructeur, `__construct()`, est une m√©thode \"magique\" ex√©cut√©e automatiquement lors de l'instanciation d'un objet (avec le mot-cl√© `new`). Il sert principalement √† initialiser les propri√©t√©s de l'objet."
    },
    {
      "question": "Quel est le principal avantage de l'utilisation des index dans une base de donn√©es MySQL ?",
      "options": [
        "Acc√©l√©rer les op√©rations d'√©criture (INSERT, UPDATE).",
        "R√©duire l'espace de stockage de la base de donn√©es.",
        "Acc√©l√©rer les op√©rations de lecture (SELECT).",
        "Garantir l'int√©grit√© r√©f√©rentielle entre les tables."
      ],
      "answer": "Acc√©l√©rer les op√©rations de lecture (SELECT).",
      "explanation": "Les index permettent au SGBD de retrouver plus rapidement les donn√©es lors d'une requ√™te SELECT. Cependant, ils peuvent ralentir les op√©rations d'√©criture (INSERT, UPDATE, DELETE) car l'index doit aussi √™tre mis √† jour."
    },
    {
      "question": "Avec l'extension `mysqli` en PHP, quelle fonction est utilis√©e pour r√©cup√©rer une ligne de r√©sultat sous forme de tableau associatif ?",
      "options": [
        "mysqli_fetch_row()",
        "mysqli_fetch_object()",
        "mysqli_fetch_assoc()",
        "mysqli_fetch_all()"
      ],
      "answer": "mysqli_fetch_assoc()",
      "explanation": "La fonction `mysqli_fetch_assoc()` r√©cup√®re une ligne de r√©sultat sous la forme d'un tableau associatif, o√π les cl√©s du tableau correspondent aux noms des colonnes de la table."
    },
    {
      "question": "Dans l'architecture MVC (Mod√®le-Vue-Contr√¥leur), quel est le r√¥le principal du Contr√¥leur ?",
      "options": [
        "G√©rer la pr√©sentation et l'affichage des donn√©es √† l'utilisateur.",
        "G√©rer l'acc√®s √† la base de donn√©es et la logique m√©tier.",
        "G√©rer les requ√™tes de l'utilisateur et orchestrer les interactions entre le Mod√®le et la Vue.",
        "D√©finir la structure des tables de la base de donn√©es."
      ],
      "answer": "G√©rer les requ√™tes de l'utilisateur et orchestrer les interactions entre le Mod√®le et la Vue.",
      "explanation": "Le Contr√¥leur agit comme un interm√©diaire. Il re√ßoit les requ√™tes de l'utilisateur (par exemple, via une URL), interagit avec le Mod√®le pour manipuler les donn√©es, et choisit la Vue appropri√©e pour afficher la r√©ponse."
    },
    {
      "question": "En POO PHP, que signifie la visibilit√© `private` pour une propri√©t√© ou une m√©thode ?",
      "options": [
        "Accessible partout, m√™me √† l'ext√©rieur de la classe.",
        "Accessible dans la classe o√π elle est d√©clar√©e et dans ses classes filles.",
        "Accessible uniquement via une interface.",
        "Accessible uniquement √† l'int√©rieur de la classe o√π elle est d√©clar√©e."
      ],
      "answer": "Accessible uniquement √† l'int√©rieur de la classe o√π elle est d√©clar√©e.",
      "explanation": "Une propri√©t√© ou m√©thode d√©clar√©e `private` n'est accessible qu'au sein de la classe qui la d√©finit. Elle n'est pas accessible par les classes qui en h√©ritent (classes filles) ni depuis l'ext√©rieur de la classe."
    },
    {
      "question": "En PHP, quelle structure de contr√¥le est utilis√©e pour intercepter et g√©rer une erreur qui a √©t√© 'lanc√©e' (thrown) ?",
      "options": [
        "Le bloc `if-else`",
        "La fonction `error_get_last()`",
        "Le bloc `switch`",
        "Le bloc `try...catch`"
      ],
      "answer": "Le bloc `try...catch`",
      "explanation": "Le code susceptible de lancer une exception est plac√© dans un bloc `try`. Si une exception est lanc√©e, l'ex√©cution du bloc `try` s'arr√™te et le bloc `catch` correspondant est ex√©cut√© pour g√©rer l'erreur de mani√®re contr√¥l√©e."
    },
    {
      "question": "Quelle est une diff√©rence fondamentale entre les services web REST et SOAP ?",
      "options": [
        "REST utilise uniquement le format JSON, tandis que SOAP utilise uniquement XML.",
        "SOAP est un protocole standardis√© avec des r√®gles strictes, tandis que REST est un style architectural plus souple.",
        "REST ne peut utiliser que la m√©thode HTTP GET.",
        "SOAP est toujours plus l√©ger et plus rapide que REST."
      ],
      "answer": "SOAP est un protocole standardis√© avec des r√®gles strictes, tandis que REST est un style architectural plus souple.",
      "explanation": "SOAP est un protocole avec un format de message et des r√®gles bien d√©finis (souvent via WSDL). REST est un ensemble de principes architecturaux bas√©s sur les standards du web comme HTTP et les URI, offrant plus de flexibilit√© dans les formats de donn√©es (JSON, XML, etc.)."
    },
    {
      "question": "Dans le framework Laravel, quel est le r√¥le principal d'un 'Fournisseur de Services' (Service Provider) ?",
      "options": [
        "G√©rer directement les requ√™tes HTTP entrantes.",
        "D√©finir les routes de l'application.",
        "Cr√©er les templates HTML pour les vues.",
        "Enregistrer des services dans le conteneur de services et effectuer des initialisations."
      ],
      "answer": "Enregistrer des services dans le conteneur de services et effectuer des initialisations.",
      "explanation": "Les fournisseurs de services sont le point central pour l'initialisation de l'application Laravel. Leur r√¥le est d'enregistrer des liaisons dans le conteneur de services, ce qui permet ensuite l'injection de d√©pendances dans les contr√¥leurs et autres classes."
    },
    {
      "question": "Quelle est la principale caract√©ristique du moteur de stockage InnoDB par rapport √† MyISAM dans MySQL ?",
      "options": [
        "Il est optimis√© uniquement pour les lectures et ne supporte pas les √©critures.",
        "Il supporte les transactions (ACID) et les cl√©s √©trang√®res.",
        "Il stocke toutes les donn√©es uniquement en m√©moire.",
        "Il est le seul √† supporter les index de type FULLTEXT."
      ],
      "answer": "Il supporte les transactions (ACID) et les cl√©s √©trang√®res.",
      "explanation": "InnoDB est un moteur transactionnel, ce qui signifie qu'il garantit l'atomicit√©, la coh√©rence, l'isolation et la durabilit√© (ACID) des op√©rations. Il g√®re √©galement l'int√©grit√© r√©f√©rentielle via les cl√©s √©trang√®res, ce que MyISAM ne fait pas."
    }
  ]
}