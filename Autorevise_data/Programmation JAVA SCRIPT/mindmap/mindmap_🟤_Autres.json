{
  "title": "üü§ Autres",
  "nodes": [
    {
      "title": "Formation NodeJS Avanc√©",
      "children": [
        {
          "title": "Pr√©sentation du formateur",
          "children": [
            {
              "title": "Contact: contact@ferrari.wf"
            },
            {
              "title": "D√©veloppeur full stack chez Summview"
            },
            {
              "title": "R√©f√©rences (LinkedIn, Alphorm, Github)"
            }
          ]
        },
        {
          "title": "Objectifs",
          "children": [
            {
              "title": "Ma√Ætriser les m√©thodes asynchrones"
            },
            {
              "title": "Concevoir un projet important"
            },
            {
              "title": "Comprendre les frameworks (Express)"
            },
            {
              "title": "Mettre en place MVC et abstraction BDD"
            },
            {
              "title": "Savoir d√©velopper une application de niveau professionnel"
            }
          ]
        },
        {
          "title": "Public concern√©",
          "children": [
            {
              "title": "√âtudiants, D√©veloppeurs, Chefs de projet"
            },
            {
              "title": "Int√©ress√©s par l'event coding et l'asynchrone"
            }
          ]
        },
        {
          "title": "Plan de la formation",
          "children": [
            {
              "title": "Node et le Web",
              "children": [
                {
                  "title": "HTTP, Request & Express"
                },
                {
                  "title": "Router, Middlewares, Moteurs de template"
                }
              ]
            },
            {
              "title": "L'asynchrone en d√©tail",
              "children": [
                {
                  "title": "Callback Hell & Pyramid of Doom"
                },
                {
                  "title": "Async.js"
                },
                {
                  "title": "Les Promesses (Q)"
                }
              ]
            },
            {
              "title": "Communication temps r√©el",
              "children": [
                {
                  "title": "Socket.io"
                },
                {
                  "title": "Projet: ChatWithMe"
                }
              ]
            },
            {
              "title": "Liaison avec la persistance des donn√©es",
              "children": [
                {
                  "title": "Relationnel (MySQL, Sequelize)"
                },
                {
                  "title": "NoSQL (Redis, MongoDB)"
                }
              ]
            },
            {
              "title": "Bonus",
              "children": [
                {
                  "title": "PM2 (monitoring)"
                },
                {
                  "title": "Keymetric (supervision)"
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "title": "Formation React.js",
      "children": [
        {
          "title": "Introduction ('The Road to learn React')",
          "children": [
            {
              "title": "Auteurs: Robin Wieruch, Guillaume Borg"
            },
            {
              "title": "Apprendre les fondamentaux de React"
            },
            {
              "title": "Construire une application concr√®te (Hacker News)"
            },
            {
              "title": "Transition de JavaScript ES5 vers ES6"
            }
          ]
        },
        {
          "title": "Plan de la formation",
          "children": [
            {
              "title": "Introduction √† React (JSX, ReactDOM, ES6)"
            },
            {
              "title": "Les bases (√âtat, Props, √âv√©nements)"
            },
            {
              "title": "Interactions avec les API (Cycle de vie, Fetch/Axios)"
            },
            {
              "title": "Organisation et tests (Jest, Enzyme, PropTypes)"
            },
            {
              "title": "Composants avanc√©s (HOC, Refs)"
            },
            {
              "title": "Gestion de l'√©tat (setState, √©l√©vation de l'√©tat)"
            },
            {
              "title": "D√©ploiement"
            }
          ]
        },
        {
          "title": "Pistes d'am√©lioration post-formation",
          "children": [
            {
              "title": "Gestion d'√©tat avanc√©e (Redux, MobX)"
            },
            {
              "title": "Base de donn√©es & Authentification (Firebase)"
            },
            {
              "title": "Outillage (Webpack, Babel)"
            },
            {
              "title": "Routage (React Router)"
            },
            {
              "title": "Typage statique (TypeScript, Flow)"
            },
            {
              "title": "Mobile (React Native)"
            }
          ]
        },
        {
          "title": "Questions / R√©ponses",
          "children": [
            {
              "title": "Shadow DOM vs. Virtual DOM"
            },
            {
              "title": "React Fiber"
            },
            {
              "title": "Appels AJAX (componentDidMount)"
            },
            {
              "title": "Render Props"
            },
            {
              "title": "Redux vs. MobX"
            }
          ]
        }
      ]
    },
    {
      "title": "Formation Angular",
      "children": [
        {
          "title": "Introduction",
          "children": [
            {
              "title": "Framework par Google (HTML, CSS, TypeScript)"
            },
            {
              "title": "Comparaison AngularJS / Angular 2+"
            },
            {
              "title": "Con√ßu pour le web moderne (ES6, Web Components, Mobile)"
            }
          ]
        },
        {
          "title": "Projet fil rouge : PonyRacer"
        },
        {
          "title": "Structure du livre/cours",
          "children": [
            {
              "title": "Chapitres conceptuels"
            },
            {
              "title": "Construction progressive (composants, templates, formulaires)"
            },
            {
              "title": "Sujets avanc√©s"
            }
          ]
        }
      ]
    },
    {
      "title": "Formation Vue.js",
      "children": [
        {
          "title": "Introduction ('Design Patterns for Vue.js')",
          "children": [
            {
              "title": "Focus: Design Patterns, Testabilit√©, S√©paration des concepts"
            },
            {
              "title": "Technologies: Vue 3 (Options & Composition API), Vue Testing Library"
            }
          ]
        },
        {
          "title": "Plan de la formation",
          "children": [
            {
              "title": "Tester les Props et √©mettre des √©v√©nements"
            },
            {
              "title": "Formulaires testables"
            },
            {
              "title": "Requ√™tes HTTP et API"
            },
            {
              "title": "Renderless Components & Render Functions"
            },
            {
              "title": "Injection de d√©pendances (Provide/Inject)"
            },
            {
              "title": "Logique immuable (Functional Core, Imperative Shell)"
            }
          ]
        }
      ]
    },
    {
      "title": "Formation JavaScript & Web G√©n√©ral",
      "children": [
        {
          "title": "Fondamentaux JavaScript",
          "children": [
            {
              "title": "Syntaxe, structures de contr√¥le, fonctions, objets"
            },
            {
              "title": "Manipulation du DOM"
            },
            {
              "title": "Gestion des √©v√©nements"
            },
            {
              "title": "jQuery & AJAX"
            }
          ]
        },
        {
          "title": "Langages de script vs. compil√©s",
          "children": [
            {
              "title": "Interpr√®te vs. Compilateur"
            },
            {
              "title": "C√¥t√© client vs. C√¥t√© serveur"
            }
          ]
        },
        {
          "title": "Architecture Client/Serveur",
          "children": [
            {
              "title": "Fonctionnement (Requ√™te DNS, Requ√™te HTTP, Rendu DOM)"
            },
            {
              "title": "M√©thodes HTTP (GET, POST, PUT, DELETE...)"
            }
          ]
        },
        {
          "title": "√âcosyst√®me de d√©veloppement",
          "children": [
            {
              "title": "Front-end vs. Back-end"
            },
            {
              "title": "IDE (Visual Studio Code)"
            },
            {
              "title": "Outils de d√©bogage"
            }
          ]
        }
      ]
    },
    {
      "title": "Formation ASP.NET",
      "children": [
        {
          "title": "Introduction et historique",
          "children": [
            {
              "title": "ASP (Active Server Pages)"
            },
            {
              "title": "ASP.NET (Framework .NET, Web Forms, MVC)"
            },
            {
              "title": "ASP.NET Core (Open source, Multiplateforme)"
            }
          ]
        },
        {
          "title": "Mod√®les de programmation",
          "children": [
            {
              "title": "Web Forms"
            },
            {
              "title": "ASP.NET MVC"
            },
            {
              "title": "Razor Pages"
            },
            {
              "title": "Web API (REST)"
            },
            {
              "title": "SignalR (Temps r√©el)"
            },
            {
              "title": "Blazor (WebAssembly)"
            }
          ]
        },
        {
          "title": "Avantages et Inconv√©nients",
          "children": [
            {
              "title": "Avantages: √âcosyst√®me Microsoft, .NET, Performance"
            },
            {
              "title": "Inconv√©nients: Courbe d'apprentissage, Historique 'vendor lock-in'"
            }
          ]
        }
      ]
    }
  ]
}