{
  "title": "üü† S√©ance 5 : Application compl√®te",
  "questions": [
    {
      "question": "Quel est le r√¥le principal de Keymetrics dans un projet NodeJS supervis√© par PM2 ?",
      "options": [
        "D√©ployer l'application sur un serveur.",
        "G√©rer les d√©pendances du projet.",
        "Afficher des statistiques et des m√©triques remont√©es par PM2.",
        "√âcrire des tests unitaires pour l'application."
      ],
      "answer": "Afficher des statistiques et des m√©triques remont√©es par PM2.",
      "explanation": "Keymetrics est une plateforme de supervision qui permet de visualiser sous forme de statistiques les informations collect√©es par le gestionnaire de processus PM2."
    },
    {
      "question": "Quelle commande permet de lier une instance PM2 √† un compte Keymetrics ?",
      "options": [
        "pm2 start keymetrics",
        "pm2 monitor --connect",
        "pm2 link [public_key] [secret_key]",
        "pm2 upload --keymetrics"
      ],
      "answer": "pm2 link [public_key] [secret_key]",
      "explanation": "La commande `pm2 link` suivie des cl√©s publique et secr√®te fournies par Keymetrics permet d'√©tablir la connexion entre PM2 et la plateforme de supervision."
    },
    {
      "question": "Quel module NPM est utilis√© pour ajouter des sondes personnalis√©es (probes) qui envoient des donn√©es m√©tiers √† Keymetrics ?",
      "options": [
        "pm2-api",
        "keymetrics-connector",
        "node-monitor",
        "pmx"
      ],
      "answer": "pmx",
      "explanation": "Le module `pmx` est sp√©cifiquement con√ßu pour cr√©er des sondes (Simple metrics, Counter, Meter, Histogram) afin de remonter des informations personnalis√©es de l'application vers Keymetrics."
    },
    {
      "question": "Parmi les types de sondes Keymetrics, lequel est utilis√© pour mesurer une valeur sur une p√©riode, comme le nombre de requ√™tes par seconde ?",
      "options": [
        "Counter",
        "Meter",
        "Histogram",
        "Simple metics"
      ],
      "answer": "Meter",
      "explanation": "Le type de sonde ¬´ Meter ¬ª est id√©al pour remonter une information en fonction du temps, par exemple un d√©bit ou une fr√©quence comme le nombre de requ√™tes par seconde."
    },
    {
      "question": "Selon le contenu, quelle est la d√©finition d'un test unitaire ?",
      "options": [
        "Un test qui simule une interaction utilisateur compl√®te avec l'application.",
        "Un test qui v√©rifie que les d√©pendances sont correctement install√©es.",
        "Un test qui v√©rifie qu'une petite portion de code fonctionne correctement en isolation.",
        "Un test qui prend un 'instantan√©' (snapshot) du rendu d'un composant."
      ],
      "answer": "Un test qui v√©rifie qu'une petite portion de code fonctionne correctement en isolation.",
      "explanation": "Les tests unitaires ont pour but de valider le bon fonctionnement d'une petite unit√© de code (composant, service, fonction) ind√©pendamment de ses d√©pendances."
    },
    {
      "question": "Quelle est la particularit√© des 'tests d'instantan√©s' (snapshot tests) popularis√©s par Jest ?",
      "options": [
        "Ils sont ex√©cut√©s manuellement par les d√©veloppeurs.",
        "Ils comparent le rendu d'un composant √† un 'instantan√©' pr√©c√©dent pour d√©tecter des changements inattendus.",
        "Ils ne fonctionnent que pour les bases de donn√©es.",
        "Ils mesurent la vitesse d'ex√©cution du code."
      ],
      "answer": "Ils comparent le rendu d'un composant √† un 'instantan√©' pr√©c√©dent pour d√©tecter des changements inattendus.",
      "explanation": "Un test d'instantan√© (snapshot test) cr√©e une 'photographie' du rendu d'un composant. Lors des tests suivants, il compare le nouveau rendu √† l'instantan√© enregistr√© et signale toute diff√©rence."
    },
    {
      "question": "Quelle technologie est mentionn√©e dans le r√©sum√© de la formation pour g√©rer la communication en temps r√©el avec les clients ?",
      "options": [
        "AJAX",
        "REST API",
        "GraphQL",
        "Socket.io"
      ],
      "answer": "Socket.io",
      "explanation": "La conclusion de la formation indique que Socket.io a √©t√© utilis√© pour mettre en place la communication en temps r√©el (comme pour un chat) entre le serveur NodeJS et les clients."
    },
    {
      "question": "Quel patron de conception (design pattern) est mentionn√© comme ayant √©t√© utilis√© pour structurer un projet NodeJS ?",
      "options": [
        "Singleton",
        "Factory",
        "MVC (Mod√®le-Vue-Contr√¥leur)",
        "Observer"
      ],
      "answer": "MVC (Mod√®le-Vue-Contr√¥leur)",
      "explanation": "Le r√©sum√© de la formation pr√©cise que le d√©veloppement d'un projet NodeJS en utilisant l'architecture MVC a √©t√© abord√©."
    }
  ]
}